#include <iostream>

using namespace std;

// Reads the tic tac toe table from standard input
void insertMatrix (char matrix[3][3])
{

    char nextCharacter;
    cout<<"Insert the Tic Tac Toe table"<<endl;

    for(int i=0; i<3; i++)
    {
        for(int j=0; j<3; j++)
        {
            cin>>nextCharacter;
            matrix[i][j]=nextCharacter;
        }
    }
    cout<<endl;
}

// Prints the tic tac toe table
void printMatrix (char matrix[3][3])
{

    cout<<"Matrix: "<<endl;

    for(int i=0; i<3; i++)
    {
        for(int j=0; j<3; j++)
        {
            cout<<matrix[i][j]<<" ";
        }
        cout<<endl;
    }
}

char checkMainDiagonal(char ticTacToe[3][3])
{
    /* if the winner doesn't exist return -
       if the winner exist return the winner (x or o) */
    char mainDiagonalChar = ticTacToe[0][0];

    for(int i=0; i<3; i++)
    {
        for(int j=0; j<3; j++)
        {
            if(i==j && mainDiagonalChar != ticTacToe[i][j])
            {
                return '?';

            }
        }
    }

    return mainDiagonalChar;
}

char checkSecondaryDiagonal(char ticTacToe[3][3])
{

    /* if the winner doesn't exist return -
       if the winner exist return the winner (x or o) */
    char secondaryDiagonalChar = ticTacToe[0][2];

    for(int i=0; i<3; i++)
    {
        for(int j=0; j<3; j++)
        {
            if(i+j==2 && secondaryDiagonalChar != ticTacToe[i][j])
            {
                return '?';

            }
        }
    }

    return secondaryDiagonalChar;
}

char checkColumns (char ticTacToe[3][3])
{
    /* if the winner doesn't exist return -
       if the winner exist return the winner (x or o) */
    for(int j=0; j<3; j++)
    {
        if(ticTacToe[0][j]== ticTacToe[1][j] && ticTacToe[1][j]==ticTacToe[2][j] && ticTacToe[0][j] != '?')
            return ticTacToe[0][j];
    }

    return '?';
}

char checkRows (char ticTacToe[3][3])
{
    /* if the winner doesn't exist return -
       if the winner exist return the winner (x or o) */

    for(int i=0; i<3; i++)
    {
        if(ticTacToe[i][0]== ticTacToe[i][1] && ticTacToe[i][1]==ticTacToe[i][2] && ticTacToe[i][0] != '?')
            return ticTacToe[i][0];
    }

    return '?';

}


char checkWinner(char tikTakToe[3][3])
{
    /* if the winner doesn't exist return -
       if the winner exist return the winner (x or o) */

    char mainDiagonalWinner = checkMainDiagonal(tikTakToe);
    char secondaryDiagonalWinner = checkSecondaryDiagonal(tikTakToe);
    char rowWinner = checkRows(tikTakToe);
    char columnWinner = checkColumns(tikTakToe);

    if(mainDiagonalWinner!='?')
        return mainDiagonalWinner;
    else if(secondaryDiagonalWinner!='?')
        return secondaryDiagonalWinner;
    else if(rowWinner!='?')
        return rowWinner;

    return columnWinner;
}

int main()
{
    char ticTacToe[3][3];

    insertMatrix(ticTacToe);

    printMatrix(ticTacToe);

    char winner=checkWinner(ticTacToe);

    if(winner!='?')
    {
        cout<<"The winner is: "<<winner<<endl;
    }
    else
    {
        cout<<"The result is tie"<<endl;
    }

    return 0;
}
